// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
#define BASE 0
#define SYM 1
#define NUM 2
#define NAV 3
#define SET 4
// -----------------

// https://zmk.dev/blog#simplifying-position-based-behaviors
//    ╭────────────────┬────────────────╮
//    │  0  1  2  3  4 │  5  6  7  8  9 │
//    │ 10 11 12 13 14 │ 15 16 17 18 19 │
//    │ 20 21 22 23 24 │ 25 26 27 28 29 │
//    ╰────────╮ 30 31 │ 32 33 ╭────────╯
//             ╰───────┴───────╯
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

// The mod-morph allows the tapkey to repeat if MODIFIER is held on other side
// e.g. mm_ht(RCTRL_E, htr_E, RCTRL, E, MOD_LCTL)
#define mm_ht(MODMORPHNAME, MODNAME, MODKEY, TAPKEY, MODIFIER, TRIGGERKEYS)   \
        MODNAME: MODNAME {                                                    \
            compatible = "zmk,behavior-hold-tap";                             \
            #binding-cells = <2>;                                             \
            flavor = "balanced";                                              \
            tapping-term-ms = <280>;                                          \
            quick-tap-ms = <175>;                                             \
            require-prior-idle-ms = <150>;                                    \
            bindings = <&kp>, <&kp>;                                          \
            hold-trigger-key-positions = <TRIGGERKEYS THUMBS>;                \
            hold-trigger-on-release;                                          \
        };                                                                    \
        MODMORPHNAME: MODMORPHNAME {                                          \
            compatible = "zmk,behavior-mod-morph";                            \
            #binding-cells = <0>;                                             \
            bindings = <&MODNAME MODKEY TAPKEY>, <&kp TAPKEY>;                \
            mods = <(MODIFIER)>;                                              \
            keep-mods = <(MODIFIER)>;                                         \
        };

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        mm_ht(RALT_I,  htr_I, RALT,  I, MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_RALT, KEYS_R)
        mm_ht(LALT_S,  htr_S, LALT,  S, MOD_LALT, KEYS_R)
        mm_ht(LCTRL_R, htr_R, LCTRL, R, MOD_RCTL, KEYS_R)
        mm_ht(LSHFT_T, htr_T, LSHFT, T, MOD_RSFT, KEYS_R)
        mm_ht(RSHFT_N, htr_N, RSHFT, N, MOD_LSFT, KEYS_L)
        mm_ht(RCTRL_E, htr_E, RCTRL, E, MOD_LCTL, KEYS_L)
        mm_ht(LALT_A,  htr_A, LALT,  A, MOD_LALT, KEYS_L)
        mm_ht(RALT_O,  htr_O, RALT,  O, MOD_RALT, KEYS_L)

        mm_ht(RALT_TAB,    htr_TAB,   RALT,  TAB,   MOD_RALT, KEYS_R)
        mm_ht(LALT_PLUS,   htr_PLUS,  LALT,  PLUS,  MOD_LALT, KEYS_R)
        mm_ht(LCTRL_EQUAL, htr_EQUAL, LCTRL, EQUAL, MOD_RCTL, KEYS_R)
        mm_ht(LSHFT_DQT,   htr_DOT,   LSHFT, DQT,   MOD_RSFT, KEYS_R)
        mm_ht(RSHFT_RPAR,  htr_RPAR,  RSHFT, RPAR,  MOD_LSFT, KEYS_L)
        mm_ht(RCTRL_LBRC,  htr_LBRC,  RCTRL, LBRC,  MOD_LCTL, KEYS_L)
        mm_ht(LALT_RBRC,   htr_RBRC,  LALT,  RBRC,  MOD_LALT, KEYS_L)
        mm_ht(RALT_LT,     htr_LT,    RALT,  LT,    MOD_RALT, KEYS_L)

        mm_ht(RALT_N1,  htr_N1, RALT,  N1, MOD_RALT, KEYS_R)
        mm_ht(LALT_N2,  htr_N2, LALT,  N2, MOD_LALT, KEYS_R)
        mm_ht(LCTRL_N3, htr_N3, LCTRL, N3, MOD_RCTL, KEYS_R)
        mm_ht(LSHFT_N4, htr_N4, LSHFT, N4, MOD_RSFT, KEYS_R)
        mm_ht(RSHFT_N7, htr_N7, RSHFT, N7, MOD_LSFT, KEYS_L)
        mm_ht(RCTRL_N8, htr_N8, RCTRL, N8, MOD_LCTL, KEYS_L)
        mm_ht(LALT_N9,  htr_N9, LALT,  N9, MOD_LALT, KEYS_L)
        mm_ht(RALT_N0,  htr_N0, RALT,  N0, MOD_RALT, KEYS_L)

        td_SET: tap_dance_SET {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&none>, <&none>, <&none>, <&none>, <&to SET>;
        };
    };

    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RALT>
                , <&macro_tap &kp N5>
                , <&macro_release &kp RALT>
                ;
        };
        web_fwd: web_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp RARW>
                , <&macro_release &kp LALT>
                ;
        };
        web_bck: web_bck {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp LARW>
                , <&macro_release &kp LALT>
                ;
        };
        web_next: web_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LCTRL>
                ;
        };
        web_prev: web_prev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTRL>
                ;
        };
        web_addr: web_addr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp L>
                , <&macro_release &kp LCTRL>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        base_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Y      0│  C      1│  L      2│  M      3│  K      4│   │  Z      5│  F      6│  U      7│  , <    8│  BSPC   9│
            &kp Y      &kp C      &kp L      &kp M      &kp K          &kp Z      &kp F      &kp U      &kp COMMA  &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  I     10│  S     11│  R     12│  T     13│  G     14│   │  P     15│  N     16│  E     17│  A     18│  O     19│
            &RALT_I    &LALT_S    &LCTRL_R   &LSHFT_T   &kp G          &kp P      &RSHFT_N   &RCTRL_E   &LALT_A    &RALT_O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Q     20│  V     21│  W     22│  D     23│  J     24│   │  B     25│  H     26│ / ?    27│ . >    28│  X     29│
            &kp Q      &kp V      &kp W      &kp D      &kp J          &kp B      &kp H      &kp FSLH   &kp DOT    &kp X
        //╰──────────┴──────────┼──────────┴─────┬────┴──────────┤   ├──────────┴────┬─────┴──────────┼──────────┴──────────╯
        //                      │              30│             31│   │             32│              33│
                                  &lt SYM SPACE    &ht LGUI ENTER      &lt NUM ESC     &mo NAV
        //                      ╰────────────────┴───────────────╯   ╰───────────────┴────────────────╯
            >;
        };

        sym_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  !       │  @       │  #       │  $       │  %       │   │  ^       │  &       │  *       │  ;       │  BSPC    │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp SEMI   &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  TAB     │  +       │  =       │  "       │  '       │   │  (       │  )       │  {       │  }       │  <       │
           &RALT_TAB &LALT_PLUS &LCTRL_EQUAL &LSHFT_DQT &kp APOS       &kp LPAR &RSHFT_RPAR &RCTRL_LBRC &LALT_RBRC &RALT_LT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ~       │  -       │  \       │  `       │  |       │   │  [       │  ]       │  _       │  :       │  >       │
           &kp TILDE   &kp MINUS  &kp BSLH   &kp GRAVE  &kp PIPE       &kp LBKT   &kp RBKT   &kp UNDER  &kp COLON  &kp GT
        //╰──────────┴──────────┼──────────┴─────┬────┴──────────┤   ├──────────┴────┬─────┴──────────┼──────────┴──────────╯
                                  &kp SPACE        &ht LGUI ENTER      &kp ESC         &none
        //                      ╰────────────────┴───────────────╯   ╰───────────────┴────────────────╯
            >;
        };

        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  F1      │  F2      │  F3      │  F4      │  F5      │   │  F6      │  F7      │  F8      │  F9      │  BSPC    │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  1       │  2       │  3       │  4       │  5       │   │  6       │  7       │  8       │  9       │  0       │
            &RALT_N1   &LALT_N2   &LCTRL_N3  &LSHFT_N4  &kp N5         &kp N6     &RSHFT_N7  &RCTRL_N8  &LALT_N9   &RALT_N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  F10     │  F11     │  F12     │  ^ (=)   │  :       │   │  +       │  -       │  /       │  .       │  *       │
            &kp F10    &kp F11    &kp F12   &ht EQUAL CARET &kp COLON  &kp PLUS   &kp MINUS  &kp FSLH   &kp DOT    &kp ASTRK
        //╰──────────┴──────────┼──────────┴─────┬────┴──────────┤   ├──────────┴────┬─────┴──────────┼──────────┴──────────╯
                                  &kp SPACE        &ht LGUI ENTER      &kp ESC         &none
        //                      ╰────────────────┴───────────────╯   ╰───────────────┴────────────────╯
            >;
        };

        nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │Media prev│Media play│Media next│ BRI INC  │   │ PAGE UP  │ HOME     │ UP       │ END      │  BSPC    │
            &none      &kp C_PREV &kp C_PP   &kp C_NEXT &kp C_BRI_UP   &kp PG_UP  &kp HOME   &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │ VOL DOWN │ VOL MUTE │ VOL UP   │ BRI DEC  │   │ PAGE DN  │ LEFT     │ DOWN     │ RIGHT    │ DELETE   │
            &none    &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &kp C_BRI_DN &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp DEL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ 5x Layer │SCROLL LCK│ PAUSE    │ INSERT   │ PRINT SC │   │ Backwards│ Prev Tab │ Next Tab │ Forward  │ CAPS     │
            &td_SET   &kp SLCK  &kp PAUSE_BREAK &kp INS  &kp PSCRN     &web_bck   &web_prev  &web_next  &web_fwd   &caps_word
        //╰──────────┴──────────┼──────────┴─────┬────┴──────────┤   ├──────────┴────┬─────┴──────────┼──────────┴──────────╯
                                  &kp SPACE        &ht LGUI ENTER      &kp ESC         &none
        //                      ╰────────────────┴───────────────╯   ╰───────────────┴────────────────╯
            >;
        };

        set_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │          │   │          │          │          │          │  RESET   │
           &sys_reset  &none      &none      &none      &none          &none      &none      &none      &none      &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│PROFILE 1 │PROFILE 2 │PROFILE 3 │PROFILE 4 │PROFILE 5 │   │          │          │          │          │          │
     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none      &none      &none      &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │ CLEAR BT │   │          │          │          │          │          │
            &none      &none      &none      &none     &bt BT_CLR      &none      &none      &none      &none      &none
        //╰──────────┴──────────┼──────────┴─────┬────┴──────────┤   ├──────────┴────┬─────┴──────────┼──────────┴──────────╯
                                  &none            &none               &none           &to BASE
        //                      ╰────────────────┴───────────────╯   ╰───────────────┴────────────────╯
            >;
        };
    };
};
